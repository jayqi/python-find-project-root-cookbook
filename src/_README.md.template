# Python Find Project Root Cookbook

[![tests](https://github.com/jayqi/reprexlite/actions/workflows/tests.yml/badge.svg?branch=main)](https://github.com/jayqi/reprexlite/actions/workflows/tests.yml?query=workflow%3Atests+branch%3Amain)

Code examples to find the root directory of your project in different ways. All examples return a [`pathlib.Path`](https://docs.python.org/3/library/pathlib.html) object. This can be useful in projects where you are reading or writing data to directories inside your project directory.

All code in this repository is licensed under the [MIT No Attribution (MIT-0) License](./LICENSE) and can be used without attribution.

If for some reason you prefer a take on a dependency for this functionality instead, see [pyprojroot](https://github.com/chendaniely/pyprojroot).

## Cookbook

Table of contents:

- [Find pyproject.toml file](#find-pyprojecttoml-file)
- [Find pyproject.toml file matching project name](#find-pyprojecttoml-file-matching-project-name)
- [Find .git directory](#find-git-directory)
- [Find a specific file containing a specific value](#find-a-specific-file-containing-a-specific-value)
- [Read from environment variable](#read-from-environment-variable)

### Find pyproject.toml file

{find_pyproject_toml}

### Find pyproject.toml file matching project name

{find_pyproject_toml_project_name}

> [!TIP]
> [tomllib](https://docs.python.org/3/library/tomllib.html) was added to the Python standard library in 3.11. To support earlier versions of Python, use the [tomli](https://github.com/hukkin/tomli) backport. You can use this dependency specifier:
> ```
> tomli >= 1.1.0 ; python_version < "3.11"
> ```
> and use this code to import it
> ```python
> import sys
>
> if sys.version_info[:2] >= (3, 11):
>     import tomllib
> else:
>     import tomli as tomllib
>
> ```

### Find .git directory

{find_git}

### Find a specific file containing a specific value

{find_marker_file}

### Read from environment variable

{read_from_env_var}
